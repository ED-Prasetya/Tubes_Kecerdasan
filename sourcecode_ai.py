{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMESAP6xLhqQWhdBJlBLYtl"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3WFOOrHul-EM","executionInfo":{"status":"ok","timestamp":1673453739477,"user_tz":-420,"elapsed":3153,"user":{"displayName":"ERIK DWI PRASETYA","userId":"16778698787607064867"}},"outputId":"819f5e0f-ee55-4f93-e8bc-f251d2c1298f"},"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}],"source":["from google.colab import drive\n","import os\n","\n","drive.mount('/content/drive')"]},{"cell_type":"code","source":["base_dir = '/content/drive/My Drive/AI-C/'\n","!ls \"/content/drive/My Drive/AI-C\""],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AfAkACFWmN6F","executionInfo":{"status":"ok","timestamp":1673453742218,"user_tz":-420,"elapsed":345,"user":{"displayName":"ERIK DWI PRASETYA","userId":"16778698787607064867"}},"outputId":"38f46acc-4a85-4ba9-d88e-4e8e040efab6"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["bahan  latih  validasi\n"]}]},{"cell_type":"code","source":["bahan_dir = os.path.join(base_dir, 'bahan')\n","train_dir = os.path.join(base_dir, 'latih')\n","validation_dir = os.path.join(base_dir, 'validasi')"],"metadata":{"id":"k6GVTc_wndRX","executionInfo":{"status":"ok","timestamp":1673453792577,"user_tz":-420,"elapsed":3,"user":{"displayName":"ERIK DWI PRASETYA","userId":"16778698787607064867"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["pandan_dir = os.path.join(bahan_dir, 'Daun_Pandan/')\n","nangka_dir = os.path.join(bahan_dir, 'Daun_Nangka/')\n","\n","print(\"Jumlah Dataset Setiap Daun\")\n","print(\"Jumlah daun Nangka  : \", len(os.listdir(nangka_dir)))\n","print(\"Jumlah daun Pandan  : \", len(os.listdir(pandan_dir)))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Gni7AE1fnmfg","executionInfo":{"status":"ok","timestamp":1673454113326,"user_tz":-420,"elapsed":930,"user":{"displayName":"ERIK DWI PRASETYA","userId":"16778698787607064867"}},"outputId":"caef9786-6337-4fd3-eeac-d78f8e247634"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["Jumlah Dataset Setiap Daun\n","Jumlah daun Nangka  :  52\n","Jumlah daun Pandan  :  54\n"]}]},{"cell_type":"code","source":["train_pandan = os.path.join(train_dir, 'Daun_Pandan/')\n","train_nangka = os.path.join(train_dir, 'Daun_Nangka/')\n","\n","validation_pandan  = os.path.join(validation_dir, 'Daun_Pandan/')\n","validation_nangka  = os.path.join(validation_dir, 'Daun_Nangka/')"],"metadata":{"id":"4hqZoBxSrmVT","executionInfo":{"status":"ok","timestamp":1673454925399,"user_tz":-420,"elapsed":8,"user":{"displayName":"ERIK DWI PRASETYA","userId":"16778698787607064867"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["import random\n","from shutil import copyfile\n","\n","def train_val_split(source, train, val, train_ratio):\n","  total_size = len(os.listdir(source))\n","  train_size = int(train_ratio * total_size)\n","  val_size = total_size - train_size\n","\n","  randomized = random.sample(os.listdir(source), total_size)\n","  train_files = randomized[0:train_size]\n","  val_files = randomized[train_size:total_size]\n","\n","  for i in train_files:\n","    i_file = source + i\n","    destination = train + i\n","    copyfile(i_file, destination)\n","\n","  for i in val_files:\n","    i_file = source + i\n","    destination = val + i\n","    copyfile(i_file, destination)\n","\n","train_ratio = 0.9\n","\n","source_00 = pandan_dir\n","train_00 = train_pandan\n","val_00 = validation_pandan\n","train_val_split(source_00, train_00, val_00, train_ratio)\n","\n","source_01 = nangka_dir\n","train_01 = train_nangka\n","val_01 = validation_nangka\n","train_val_split(source_01, train_01, val_01, train_ratio)"],"metadata":{"id":"e9IVB94nr7HF","executionInfo":{"status":"ok","timestamp":1673455039607,"user_tz":-420,"elapsed":40039,"user":{"displayName":"ERIK DWI PRASETYA","userId":"16778698787607064867"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":["print('jumlah seluruh pandan    : ', len(os.listdir(pandan_dir)))\n","print('jumlah train pandan      : ', len(os.listdir(train_pandan)))\n","print('jumlah validation pandan : ', len(os.listdir(validation_pandan)))\n","\n","print('jumlah seluruh nangka    : ', len(os.listdir(nangka_dir)))\n","print('jumlah train nangka      : ', len(os.listdir(train_nangka)))\n","print('jumlah validation nangka : ', len(os.listdir(validation_nangka)))\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"4SfPyxo7sSaz","executionInfo":{"status":"ok","timestamp":1673455132560,"user_tz":-420,"elapsed":5,"user":{"displayName":"ERIK DWI PRASETYA","userId":"16778698787607064867"}},"outputId":"85439335-f1eb-4006-9d0a-66332f1e3045"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["jumlah seluruh pandan    :  54\n","jumlah train pandan      :  48\n","jumlah validation pandan :  6\n","jumlah seluruh nangka    :  52\n","jumlah train nangka      :  46\n","jumlah validation nangka :  6\n"]}]},{"cell_type":"code","source":["import tensorflow as tf\n","from tensorflow.keras.optimizers import Adam\n","from tensorflow.keras.preprocessing.image import ImageDataGenerator"],"metadata":{"id":"eezxxeoestoc","executionInfo":{"status":"ok","timestamp":1673455143455,"user_tz":-420,"elapsed":3364,"user":{"displayName":"ERIK DWI PRASETYA","userId":"16778698787607064867"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["train_datagen = ImageDataGenerator(\n","    rescale = 1./255,\n","    rotation_range = 30,\n","    horizontal_flip = True,\n","    shear_range = 0.3,\n","    fill_mode = 'nearest',\n","    width_shift_range = 0.2,\n","    height_shift_range = 0.2,\n","    zoom_range = 0.1\n",")\n","\n","val_datagen = ImageDataGenerator(\n","    rescale = 1./255,\n","    rotation_range = 30,\n","    horizontal_flip = True,\n","    shear_range = 0.3,\n","    fill_mode = 'nearest',\n","    width_shift_range = 0.2,\n","    height_shift_range = 0.2,\n","    zoom_range = 0.1\n",")"],"metadata":{"id":"sk3SHtTPsyNS","executionInfo":{"status":"ok","timestamp":1673455164155,"user_tz":-420,"elapsed":3,"user":{"displayName":"ERIK DWI PRASETYA","userId":"16778698787607064867"}}},"execution_count":17,"outputs":[]},{"cell_type":"code","source":["train_generator = train_datagen.flow_from_directory(\n","    train_dir,\n","    target_size = (150, 150),\n","    batch_size = 10,\n","    class_mode = 'categorical'\n",")\n","\n","val_generator = val_datagen.flow_from_directory(\n","    validation_dir,\n","    target_size = (150, 150),\n","    batch_size = 10,\n","    class_mode = 'categorical'\n",")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ONvRceNIs1Sj","executionInfo":{"status":"ok","timestamp":1673455173535,"user_tz":-420,"elapsed":5,"user":{"displayName":"ERIK DWI PRASETYA","userId":"16778698787607064867"}},"outputId":"66bdf0a3-0279-42db-be01-bd96e308f6d1"},"execution_count":19,"outputs":[{"output_type":"stream","name":"stdout","text":["Found 94 images belonging to 2 classes.\n","Found 12 images belonging to 2 classes.\n"]}]},{"cell_type":"code","source":["class myCallback(tf.keras.callbacks.Callback):\n","  def on_epoch_end(self, epoch, logs = {}):\n","    if(logs.get('accuracy') > 0.99):\n","      print('\\nAkurasi mencapai 99%')\n","      self.model.stop_training = True\n","\n","callbacks = myCallback()      "],"metadata":{"id":"3F9c3PB3s3rd","executionInfo":{"status":"ok","timestamp":1673455186632,"user_tz":-420,"elapsed":4,"user":{"displayName":"ERIK DWI PRASETYA","userId":"16778698787607064867"}}},"execution_count":20,"outputs":[]},{"cell_type":"code","source":["model = tf.keras.models.Sequential([\n","    tf.keras.layers.Conv2D(16, (3, 3), activation = 'relu', input_shape = (150, 150, 3)),\n","    tf.keras.layers.MaxPooling2D(2, 2),\n","    tf.keras.layers.Conv2D(32, (3, 3), activation = 'relu'),\n","    tf.keras.layers.MaxPooling2D(2, 2),\n","    tf.keras.layers.Conv2D(64, (3, 3), activation = 'relu'),\n","    tf.keras.layers.MaxPooling2D(2, 2),\n","    tf.keras.layers.Flatten(),\n","    tf.keras.layers.Dense(200, activation = 'relu'),\n","    tf.keras.layers.Dropout(0.3,seed=112),\n","    tf.keras.layers.Dense(500, activation = 'relu'),\n","    tf.keras.layers.Dropout(0.5,seed=112),\n","    tf.keras.layers.Dense(2, activation = 'sigmoid')\n","])"],"metadata":{"id":"Mbui_fass6tx","executionInfo":{"status":"ok","timestamp":1673455202688,"user_tz":-420,"elapsed":3,"user":{"displayName":"ERIK DWI PRASETYA","userId":"16778698787607064867"}}},"execution_count":22,"outputs":[]},{"cell_type":"code","source":["model.summary()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Vois6Wtys-k9","executionInfo":{"status":"ok","timestamp":1673455212658,"user_tz":-420,"elapsed":22,"user":{"displayName":"ERIK DWI PRASETYA","userId":"16778698787607064867"}},"outputId":"505560f4-a9ac-4997-9e05-13051bd45f41"},"execution_count":23,"outputs":[{"output_type":"stream","name":"stdout","text":["Model: \"sequential_1\"\n","_________________________________________________________________\n"," Layer (type)                Output Shape              Param #   \n","=================================================================\n"," conv2d_3 (Conv2D)           (None, 148, 148, 16)      448       \n","                                                                 \n"," max_pooling2d_3 (MaxPooling  (None, 74, 74, 16)       0         \n"," 2D)                                                             \n","                                                                 \n"," conv2d_4 (Conv2D)           (None, 72, 72, 32)        4640      \n","                                                                 \n"," max_pooling2d_4 (MaxPooling  (None, 36, 36, 32)       0         \n"," 2D)                                                             \n","                                                                 \n"," conv2d_5 (Conv2D)           (None, 34, 34, 64)        18496     \n","                                                                 \n"," max_pooling2d_5 (MaxPooling  (None, 17, 17, 64)       0         \n"," 2D)                                                             \n","                                                                 \n"," flatten_1 (Flatten)         (None, 18496)             0         \n","                                                                 \n"," dense_3 (Dense)             (None, 200)               3699400   \n","                                                                 \n"," dropout_2 (Dropout)         (None, 200)               0         \n","                                                                 \n"," dense_4 (Dense)             (None, 500)               100500    \n","                                                                 \n"," dropout_3 (Dropout)         (None, 500)               0         \n","                                                                 \n"," dense_5 (Dense)             (None, 2)                 1002      \n","                                                                 \n","=================================================================\n","Total params: 3,824,486\n","Trainable params: 3,824,486\n","Non-trainable params: 0\n","_________________________________________________________________\n"]}]},{"cell_type":"code","source":["model.compile(loss = 'categorical_crossentropy',\n","              optimizer = 'Adam',\n","              metrics = ['accuracy'])"],"metadata":{"id":"Tw30Ta-xtBNq","executionInfo":{"status":"ok","timestamp":1673455231415,"user_tz":-420,"elapsed":354,"user":{"displayName":"ERIK DWI PRASETYA","userId":"16778698787607064867"}}},"execution_count":24,"outputs":[]},{"cell_type":"code","source":["history = model.fit(\n","    train_generator,\n","    steps_per_epoch = 6,\n","    epochs = 25,\n","    validation_data = val_generator,\n","    validation_steps = 1,\n","    verbose = 1,\n","    callbacks = [callbacks]\n",")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"l2x-ewUBtFxW","executionInfo":{"status":"ok","timestamp":1673455632471,"user_tz":-420,"elapsed":18870,"user":{"displayName":"ERIK DWI PRASETYA","userId":"16778698787607064867"}},"outputId":"7e5fbc6d-5046-4d49-c6ab-426f778422df"},"execution_count":35,"outputs":[{"output_type":"stream","name":"stdout","text":["Epoch 1/25\n","6/6 [==============================] - 5s 818ms/step - loss: 0.0477 - accuracy: 0.9833 - val_loss: 0.0314 - val_accuracy: 1.0000\n","Epoch 2/25\n","6/6 [==============================] - 4s 662ms/step - loss: 0.1809 - accuracy: 0.9815 - val_loss: 0.0057 - val_accuracy: 1.0000\n","Epoch 3/25\n","6/6 [==============================] - 4s 729ms/step - loss: 0.0321 - accuracy: 0.9833 - val_loss: 0.0483 - val_accuracy: 1.0000\n","Epoch 4/25\n","6/6 [==============================] - ETA: 0s - loss: 0.0282 - accuracy: 1.0000\n","Akurasi mencapai 99%\n","6/6 [==============================] - 4s 664ms/step - loss: 0.0282 - accuracy: 1.0000 - val_loss: 0.0442 - val_accuracy: 1.0000\n"]}]},{"cell_type":"code","source":["%matplotlib inline\n","\n","import matplotlib.image as mpimg\n","import matplotlib.pyplot as plt\n","\n","acc = history.history['accuracy']\n","val_acc = history.history['val_accuracy']\n","loss = history.history['loss']\n","val_loss = history.history['val_loss']\n","\n","epochs = range(len(acc))\n","\n","plt.plot(epochs, acc, 'r', label = 'Training Accuracy')\n","plt.plot(epochs, val_acc, 'b', label = 'Validation Accuracy')\n","plt.title('Training and Validation Accuracy')\n","plt.legend(loc = 'best')\n","plt.show()\n","\n","plt.plot(epochs, loss, 'r', label = 'Training Accuracy')\n","plt.plot(epochs, val_loss, 'b', label = 'Validation Accuracy')\n","plt.title('Training and Validation Accuracy')\n","plt.legend(loc = 'best')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":545},"id":"9WMv7BivtH9N","executionInfo":{"status":"ok","timestamp":1673455649629,"user_tz":-420,"elapsed":4494,"user":{"displayName":"ERIK DWI PRASETYA","userId":"16778698787607064867"}},"outputId":"6c96c3d6-5c5f-49f9-838b-39d3b7c9571c"},"execution_count":36,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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qam8//77VK9enS++yNhuJXzyo2NcblgCMOGxfr0b0K19e3fzNlyGDYN//cu1DDp8OHzHNXnStWtXPv744/TxcJKTk9m0aRNnnXUW/fr1o3nz5jRs2JChQ4cG3b9GjRr89ddfAIwYMYK6devStm3b9CGjwbXxb9GiBYmJiVx++eXs2bOHr7/+mhkzZjB48GAaN27MmjVrjhqm+bPPPqNJkyY0atSI3r17s3///vT3Gzp0KE2bNqVRo0asWrUqaFzxNmy0DQdt8i411Y3xr+pG+wxnq51y5dwAcVddBePGudFDzVH8GA26QoUKtGzZklmzZtG5c2emTZvG//3f/yEijBgxggoVKnD48GHOO+88fvzxR04//fSgx1myZAnTpk1j2bJlHDp0iKZNm9KsWTMALrvsMvr06QPA/fffz4QJE7j11lvp1KkTl1xyCV27dj3qWPv27aNXr1589tln1K1bl2uvvZaXXnqJgd69qEqVKrF06VJefPFFRo0axfjx44+JJ96GjbYSgMm7l16CuXPh6aehRo3wH79HD2jXzt0LsPGgIkZgNVBg9c/bb79N06ZNadKkCStWrDiquiajBQsWcOmll1KyZEnKli1Lp06d0tctX76cs846i0aNGjF16tRMh5NOs3r1amrWrEndunUB6NmzJ/Pnz09ff9lllwHQrFmz9AHkAsXjsNFWAjB5k5TkOnpddJG7AZwfROCFFyAx0bUKmjgxf94nSvk1GnTnzp0ZNGgQS5cuZc+ePTRr1ox169YxatQoFi1aRPny5enVq1eWQyFnpVevXnzwwQckJiYyadIk5s2bl6d404aUzmw46XgcNtpKACb3Dh92E7sXKQLjx7sLdX5p0AAGDXL9Arz6V+Ov0qVL0759e3r37p3+63/nzp2UKlWKcuXKsXnzZmbNmpXlMc4++2w++OAD9u7dy65du/joo4/S1+3atYsqVapw8ODBoy52ZcqUYVeQyYPq1atHcnIySUlJALz22mucc845IZ9PPA4bbQnA5N6zz8KXX7p/qwXtCB5eDz7o3ufmmyFCWlHEux49evDDDz+kJ4DExESaNGlC/fr1ufLKKznzzDOz3L9p06ZcccUVJCYm0rFjR1q0aJG+7uGHH6ZVq1aceeaZ1K9fP3159+7defLJJ2nSpAlr1qxJX168eHFeffVVunXrRqNGjShUqBA3hXjP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\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["import numpy as np\n","from keras.preprocessing import image\n","from tensorflow.keras.utils import img_to_array\n","from google.colab import files\n","import keras\n","import tensorflow as tf\n","\n","uploaded = files.upload()\n","\n","for fn in uploaded.keys():\n","\n","  #predicting images\n","  path = fn\n","  img = tf.keras.preprocessing.image.load_img(path, target_size = (150, 150))\n","  imgplot = plt.imshow(img)\n","  img_pixel = img_to_array(img)\n","  img_test  = np.expand_dims(image.img_to_array(img), axis = 0)\n","\n","  images = np.vstack([img_test])\n","  classes = model.predict(images, batch_size = 100)\n","\n","  print(fn)\n","\n","  class_list = os.listdir(train_dir)\n","\n","  for j in range(42):\n","    if classes[0][j] == 1. :\n","      print('This image belongs to class', class_list[j-1])\n","      break"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":553},"id":"Vk98by5ptM1b","executionInfo":{"status":"error","timestamp":1673455927413,"user_tz":-420,"elapsed":12592,"user":{"displayName":"ERIK DWI PRASETYA","userId":"16778698787607064867"}},"outputId":"443fdf20-6abf-4a56-c6f9-ddee51e91249"},"execution_count":40,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","     <input type=\"file\" id=\"files-279b18bf-4a3f-4fff-958d-8b79869d4ec1\" name=\"files[]\" multiple disabled\n","        style=\"border:none\" />\n","     <output id=\"result-279b18bf-4a3f-4fff-958d-8b79869d4ec1\">\n","      Upload widget is only available when the cell has been executed in the\n","      current browser session. Please rerun this cell to enable.\n","      </output>\n","      <script>// Copyright 2017 Google LLC\n","//\n","// Licensed under the Apache License, Version 2.0 (the \"License\");\n","// you may not use this file except in compliance with the License.\n","// You may obtain a copy of the License at\n","//\n","//      http://www.apache.org/licenses/LICENSE-2.0\n","//\n","// Unless required by applicable law or agreed to in writing, software\n","// distributed under the License is distributed on an \"AS IS\" BASIS,\n","// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","// See the License for the specific language governing permissions and\n","// limitations under the License.\n","\n","/**\n"," * @fileoverview Helpers for google.colab Python module.\n"," */\n","(function(scope) {\n","function span(text, styleAttributes = {}) {\n","  const element = document.createElement('span');\n","  element.textContent = text;\n","  for (const key of Object.keys(styleAttributes)) {\n","    element.style[key] = styleAttributes[key];\n","  }\n","  return element;\n","}\n","\n","// Max number of bytes which will be uploaded at a time.\n","const MAX_PAYLOAD_SIZE = 100 * 1024;\n","\n","function _uploadFiles(inputId, outputId) {\n","  const steps = uploadFilesStep(inputId, outputId);\n","  const outputElement = document.getElementById(outputId);\n","  // Cache steps on the outputElement to make it available for the next call\n","  // to uploadFilesContinue from Python.\n","  outputElement.steps = steps;\n","\n","  return _uploadFilesContinue(outputId);\n","}\n","\n","// This is roughly an async generator (not supported in the browser yet),\n","// where there are multiple asynchronous steps and the Python side is going\n","// to poll for completion of each step.\n","// This uses a Promise to block the python side on completion of each step,\n","// then passes the result of the previous step as the input to the next step.\n","function _uploadFilesContinue(outputId) {\n","  const outputElement = document.getElementById(outputId);\n","  const steps = outputElement.steps;\n","\n","  const next = steps.next(outputElement.lastPromiseValue);\n","  return Promise.resolve(next.value.promise).then((value) => {\n","    // Cache the last promise value to make it available to the next\n","    // step of the generator.\n","    outputElement.lastPromiseValue = value;\n","    return next.value.response;\n","  });\n","}\n","\n","/**\n"," * Generator function which is called between each async step of the upload\n"," * process.\n"," * @param {string} inputId Element ID of the input file picker element.\n"," * @param {string} outputId Element ID of the output display.\n"," * @return {!Iterable<!Object>} Iterable of next steps.\n"," */\n","function* uploadFilesStep(inputId, outputId) {\n","  const inputElement = document.getElementById(inputId);\n","  inputElement.disabled = false;\n","\n","  const outputElement = document.getElementById(outputId);\n","  outputElement.innerHTML = '';\n","\n","  const pickedPromise = new Promise((resolve) => {\n","    inputElement.addEventListener('change', (e) => {\n","      resolve(e.target.files);\n","    });\n","  });\n","\n","  const cancel = document.createElement('button');\n","  inputElement.parentElement.appendChild(cancel);\n","  cancel.textContent = 'Cancel upload';\n","  const cancelPromise = new Promise((resolve) => {\n","    cancel.onclick = () => {\n","      resolve(null);\n","    };\n","  });\n","\n","  // Wait for the user to pick the files.\n","  const files = yield {\n","    promise: Promise.race([pickedPromise, cancelPromise]),\n","    response: {\n","      action: 'starting',\n","    }\n","  };\n","\n","  cancel.remove();\n","\n","  // Disable the input element since further picks are not allowed.\n","  inputElement.disabled = true;\n","\n","  if (!files) {\n","    return {\n","      response: {\n","        action: 'complete',\n","      }\n","    };\n","  }\n","\n","  for (const file of files) {\n","    const li = document.createElement('li');\n","    li.append(span(file.name, {fontWeight: 'bold'}));\n","    li.append(span(\n","        `(${file.type || 'n/a'}) - ${file.size} bytes, ` +\n","        `last modified: ${\n","            file.lastModifiedDate ? file.lastModifiedDate.toLocaleDateString() :\n","                                    'n/a'} - `));\n","    const percent = span('0% done');\n","    li.appendChild(percent);\n","\n","    outputElement.appendChild(li);\n","\n","    const fileDataPromise = new Promise((resolve) => {\n","      const reader = new FileReader();\n","      reader.onload = (e) => {\n","        resolve(e.target.result);\n","      };\n","      reader.readAsArrayBuffer(file);\n","    });\n","    // Wait for the data to be ready.\n","    let fileData = yield {\n","      promise: fileDataPromise,\n","      response: {\n","        action: 'continue',\n","      }\n","    };\n","\n","    // Use a chunked sending to avoid message size limits. See b/62115660.\n","    let position = 0;\n","    do {\n","      const length = Math.min(fileData.byteLength - position, MAX_PAYLOAD_SIZE);\n","      const chunk = new Uint8Array(fileData, position, length);\n","      position += length;\n","\n","      const base64 = btoa(String.fromCharCode.apply(null, chunk));\n","      yield {\n","        response: {\n","          action: 'append',\n","          file: file.name,\n","          data: base64,\n","        },\n","      };\n","\n","      let percentDone = fileData.byteLength === 0 ?\n","          100 :\n","          Math.round((position / fileData.byteLength) * 100);\n","      percent.textContent = `${percentDone}% done`;\n","\n","    } while (position < fileData.byteLength);\n","  }\n","\n","  // All done.\n","  yield {\n","    response: {\n","      action: 'complete',\n","    }\n","  };\n","}\n","\n","scope.google = scope.google || {};\n","scope.google.colab = scope.google.colab || {};\n","scope.google.colab._files = {\n","  _uploadFiles,\n","  _uploadFilesContinue,\n","};\n","})(self);\n","</script> "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Saving Daun_Pandan (13).jpg to Daun_Pandan (13) (1).jpg\n"]},{"output_type":"error","ename":"AttributeError","evalue":"ignored","traceback":["\u001b[0;31m---------------------------------------------------------------------------\u001b[0m","\u001b[0;31mAttributeError\u001b[0m                            Traceback (most recent call last)","\u001b[0;32m<ipython-input-40-a767be05c674>\u001b[0m in \u001b[0;36m<module>\u001b[0;34m\u001b[0m\n\u001b[1;32m     15\u001b[0m   \u001b[0mimgplot\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mplt\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mimshow\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimg\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     16\u001b[0m   \u001b[0mimg_pixel\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mimg_to_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimg\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0;32m---> 17\u001b[0;31m   \u001b[0mimg_test\u001b[0m  \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mexpand_dims\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimage\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mimg_to_array\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0mimg\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m,\u001b[0m \u001b[0maxis\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0;36m0\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n\u001b[0m\u001b[1;32m     18\u001b[0m \u001b[0;34m\u001b[0m\u001b[0m\n\u001b[1;32m     19\u001b[0m   \u001b[0mimages\u001b[0m \u001b[0;34m=\u001b[0m \u001b[0mnp\u001b[0m\u001b[0;34m.\u001b[0m\u001b[0mvstack\u001b[0m\u001b[0;34m(\u001b[0m\u001b[0;34m[\u001b[0m\u001b[0mimg_test\u001b[0m\u001b[0;34m]\u001b[0m\u001b[0;34m)\u001b[0m\u001b[0;34m\u001b[0m\u001b[0;34m\u001b[0m\u001b[0m\n","\u001b[0;31mAttributeError\u001b[0m: module 'keras.preprocessing.image' has no attribute 'img_to_array'"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}]}]}